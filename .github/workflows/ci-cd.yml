name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

permissions:
  contents: read
  packages: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Test with coverage
        run: npm test -- --coverage

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.image }}
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Define image tag (lowercase repo)
        id: meta
        run: |
          REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_REF=${{ env.REGISTRY}}/${REPO_LC}:${{ github.sha }}
          echo "image=$IMAGE_REF" >> "$GITHUB_OUTPUT"
      - name: Build and push with cache
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    concurrency:
      group: fly-deploy-${{ github.ref }}
      cancel-in-progress: true
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Fly deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          IMAGE=${{ needs.build.outputs.image }}
          flyctl deploy -i "$IMAGE" --strategy immediate --build-arg NODE_ENV=production
